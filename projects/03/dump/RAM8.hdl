


/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    // turned in of dumuax from true to load and commented this off 
    // And(a=a, b=load, out=al);
    // And(a=b, b=load, out=bl);
    // And(a=c, b=load, out=cl);
    // And(a=d, b=load, out=dl);
    // And(a=e, b=load, out=el);
    // And(a=f, b=load, out=fl);
    // And(a=g, b=load, out=gl);
    // And(a=h, b=load, out=hl);
    Register(in=in, load=a, out=out1);
    Register(in=in, load=b, out=out2);
    Register(in=in, load=c, out=out3);
    Register(in=in, load=d, out=out4);
    Register(in=in, load=e, out=out5);
    Register(in=in, load=f, out=out6);
    Register(in=in, load=g, out=out7);
    Register(in=in, load=h, out=out8);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address, out=out);

}